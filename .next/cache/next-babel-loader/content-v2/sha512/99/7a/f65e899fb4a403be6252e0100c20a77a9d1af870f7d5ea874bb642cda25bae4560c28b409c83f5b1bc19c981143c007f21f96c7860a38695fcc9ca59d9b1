{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jan carlos\\\\Documents\\\\2021\\\\NextJs\\\\RickAndMorty\\\\pages\\\\characters\\\\[id].js\";\nimport styles from './Character.module.css';\nexport default function Character({\n  character\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.characterContainer,\n    children: \"Hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n  const characters = await res.json();\n  console.log(characters);\n  const paths = characters['results'].map(character => ({\n    params: {\n      id: character.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the character `id`.\n  // If the route is like /characters/1, then params.id is 1\n  const res = await fetch(`https://rickandmortyapi.com/api/character/${params.id}`);\n  const character = await res.json(); // Pass character data to the page via props\n\n  return {\n    props: {\n      character\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/jan carlos/Documents/2021/NextJs/RickAndMorty/pages/characters/[id].js"],"names":["styles","Character","character","characterContainer","getStaticPaths","res","fetch","characters","json","console","log","paths","map","params","id","toString","fallback","getStaticProps","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAgC;AAE7C,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAAvB;AACA,QAAMC,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,QAAMI,KAAK,GAAGJ,UAAU,CAAC,SAAD,CAAV,CAAsBK,GAAtB,CAA0BV,SAAS,KAAK;AACpDW,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEZ,SAAS,CAACY,EAAV,CAAaC,QAAb;AAAN;AAD4C,GAAL,CAAnC,CAAd;AAIA,SAAO;AACLJ,IAAAA,KADK;AAELK,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA;AACA,QAAMR,GAAG,GAAG,MAAMC,KAAK,CACpB,6CAA4CO,MAAM,CAACC,EAAG,EADlC,CAAvB;AAGA,QAAMZ,SAAS,GAAG,MAAMG,GAAG,CAACG,IAAJ,EAAxB,CAN+C,CAQ/C;;AACA,SAAO;AAAEU,IAAAA,KAAK,EAAE;AAAEhB,MAAAA;AAAF;AAAT,GAAP;AACD","sourcesContent":["import styles from './Character.module.css'\r\n\r\nexport default function Character({character}) {\r\n\r\n  return (\r\n    <div className={styles.characterContainer}>\r\n            Hola\r\n    </div>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n  const characters = await res.json();\r\n  console.log(characters)\r\n\r\n  const paths = characters['results'].map(character => ({\r\n    params: { id: character.id.toString() },\r\n  }));\r\n\r\n  return {\r\n    paths,\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  // params contains the character `id`.\r\n  // If the route is like /characters/1, then params.id is 1\r\n  const res = await fetch(\r\n    `https://rickandmortyapi.com/api/character/${params.id}`\r\n  );\r\n  const character = await res.json();\r\n\r\n  // Pass character data to the page via props\r\n  return { props: { character } };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}