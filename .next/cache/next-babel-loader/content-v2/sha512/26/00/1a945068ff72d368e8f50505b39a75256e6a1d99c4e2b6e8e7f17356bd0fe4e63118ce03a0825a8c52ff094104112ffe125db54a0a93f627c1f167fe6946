{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jan carlos\\\\Documents\\\\2021\\\\NextJs\\\\RickAndMorty\\\\pages\\\\characters\\\\[id].js\";\nimport { useRouter } from \"next/router\";\nexport var __N_SSG = true;\nexport default function Character(_ref) {\n  var character = _ref.character;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Post: \", character.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["C:/Users/jan carlos/Documents/2021/NextJs/RickAndMorty/pages/characters/[id].js"],"names":["useRouter","Character","character","id"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,eAAe,SAASC,SAAT,OAAgC;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAE7C,sBAAO;AAAA,yBAAUA,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAHuBF,S","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nexport default function Character({character}) {\r\n\r\n  return <p>Post: {character.id}</p>;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n  const characters = await res.json();\r\n  console.log(characters)\r\n\r\n  const paths = characters['results'].map(character => ({\r\n    params: { id: character.id.toString() },\r\n  }));\r\n\r\n  return {\r\n    paths,\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  // params contains the post `id`.\r\n  // If the route is like /posts/1, then params.id is 1\r\n  const res = await fetch(\r\n    `https://rickandmortyapi.com/api/character/${params.id}`\r\n  );\r\n  const character = await res.json();\r\n\r\n  // Pass post data to the page via props\r\n  return { props: { character } };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}