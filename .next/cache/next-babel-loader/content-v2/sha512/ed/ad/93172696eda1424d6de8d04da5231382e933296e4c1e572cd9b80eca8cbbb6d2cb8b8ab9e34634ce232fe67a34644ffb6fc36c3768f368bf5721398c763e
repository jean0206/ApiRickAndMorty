{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jan carlos\\\\Documents\\\\2021\\\\NextJs\\\\RickAndMorty\\\\pages\\\\characters\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nexport var __N_SSG = true;\nexport default function Character(props) {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  console.log(props.character);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Post: \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Character, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["C:/Users/jan carlos/Documents/2021/NextJs/RickAndMorty/pages/characters/[id].js"],"names":["useRouter","Character","props","router","id","query","console","log","character"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADuC,MAE/BI,EAF+B,GAExBD,MAAM,CAACE,KAFiB,CAE/BD,EAF+B;AAGvCE,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,SAAlB;AACA,sBAAO;AAAA,yBAAUJ,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GALuBH,S;UACPD,S;;;KADOC,S","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nexport default function Character(props) {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  console.log(props.character);\r\n  return <p>Post: {id}</p>;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n  const characters = await res.json();\r\n\r\n  const paths = characters.map((character) => ({\r\n    params: { id: character.id },\r\n  }));\r\n\r\n  return {\r\n    paths,\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  // params contains the post `id`.\r\n  // If the route is like /posts/1, then params.id is 1\r\n  const res = await fetch(\r\n    `https://rickandmortyapi.com/api/character/${params.id}`\r\n  );\r\n  const character = await res.json();\r\n\r\n  // Pass post data to the page via props\r\n  return { props: { character } };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}